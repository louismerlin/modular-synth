{"version":3,"sources":["../src/preact.js","../src/vnode.js","../src/options.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","../src/render.js","modules/Module.js","Led.js","Knob.js","Cables.js","Socket.js","modules/Clock.js","modules/Sequencer.js","modules/Envelope.js","modules/Oscilator.js","modules/VCA.js","modules/Filter.js","modules/Out.js","App.js","main.js"],"names":["VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","i","arguments","length","push","pop","undefined","String","p","key","vnode","extend","obj","props","applyRef","ref","value","current","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","NO_RENDER","SYNC_RENDER","FORCE_RENDER","ASYNC_RENDER","IS_NON_DIMENSIONAL","items","isSameNodeType","node","_componentConstructor","isNamedNode","normalizedNodeName","defaultProps","document","createElementNS","removeNode","parentNode","setAccessor","old","name","style","innerHTML","__html","useCapture","_listeners","removeChild","ns","eventProxy","mounts","diffLevel","hydrating","flushMounts","c","shift","ret","parent","componentRoot","prevSvgMode","ATTR_KEY","out","buildComponentFromVNode","vnodeName","dom","firstChild","appendChild","nodeValue","vchildren","context","mountAll","originalChildren","keyed","min","len","childrenLen","vlen","j","f","vchild","keyedLen","component","unmountOnly","next","previousSibling","diffAttributes","attrs","recyclerComponents","createComponent","Ctor","prototype","constructor","nextBase","doRender","setComponentProps","_disable","componentWillReceiveProps","prevContext","renderMode","syncComponentUpdates","previousProps","previousState","__ref","renderComponent","state","isUpdate","base","initialBase","snapshot","rendered","inst","cbase","shouldComponentUpdate","prevProps","_dirty","render","getSnapshotBeforeUpdate","childComponent","childProps","getNodeProps","initialChildComponent","baseParent","replaceChild","_component","toUnmount","componentRef","t","afterUpdate","_renderCallbacks","isChild","originalComponent","oldDom","isOwner","beforeUnmount","componentWillUnmount","callback","diff","merge","createRef","color","blink","Component","paramTypes","frequency","minValue","maxValue","gain","lfo","filterFrequency","qFactor","Knob","properties","type","range","handleMouseMove","e","buttons","param","newValue","movementY","update","knob","Array","forEach","forceUpdate","small","transform","classes","size","lineHeight","CablesOverlay","downNode","input","output","addCable","link","method","connect","down","trig","n","cables","component1","component2","setState","concat","components","_","map","b1","x1","offsetLeft","offsetWidth","y1","offsetTop","offsetHeight","b2","x2","y2","onConnect","strokeWidth","ClockNode","outs","beep","clock","start","o","window","clockNode","Note","index","sequencer","updateNote","SequencerNode","steps","clk","notes","fill","currentStep","sendSignal","sequencerNode","newStep","rows","Math","ceil","note","EnvelopeNode","attack","hold","decay","envelopeNode","FrequencyControlNode","nodes","addedFrequency","difference","sineNode","squareNode","triangleNode","sawNode","audioContext","createOscillator","frequencyControlNode","VCANode","gainNode","params","setTargetAtTime","currentTime","createGain","vcaNode","lowpassNode","highpassNode","createBiquadFilter","allNodes","allFrequencies","allResonances","Q","finish","destination","AudioContext","webkitAudioContext","App","close","mountNode","getElementById","lastChild"],"mappings":"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","file":"main.da0903cc.map","sourceRoot":"../src","sourcesContent":["import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nfunction createRef() {\n\treturn {};\n}\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref!=null) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","import { diff } from './vdom/diff';\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').PreactElement} parent DOM element to render into\n * @param {import('./dom').PreactElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","import { h } from 'preact'\nimport './Module.css'\n\nexport default ({ children }) => (\n  <div class='module'>\n    {children}\n  </div>\n)","import { h } from 'preact'\n\nexport default ({ color, blink }) => (\n  <svg width='2mm' height='2mm' style='overflow: visible; margin: 0.1cm;'>\n    <circle cx='1mm' cy='1mm' r='1mm' fill={blink ? color : 'white'} stroke='black' stroke-width='2' />\n  </svg>\n)","import { h, Component } from 'preact'\nimport './Knob.css'\n\nconst paramTypes = {\n  frequency: {\n    minValue: 0,\n    maxValue: 1760,\n  },\n  gain: {\n    minValue: 0,\n    maxValue: 1\n  },\n  lfo: {\n    minValue: 1/6,\n    maxValue: 6\n  },\n  filterFrequency: {\n    minValue: 0,\n    maxValue: 12000\n  },\n  qFactor: {\n    minValue: 0.0001,\n    maxValue: 20\n  }\n}\n\nexport default class Knob extends Component {\n  constructor(props) {\n    super(props)\n    const properties = paramTypes[props.type] || {}\n    this.state = {\n      range: properties.maxValue - properties.minValue || 1,\n      properties\n    }\n    this.handleMouseMove = this.handleMouseMove.bind(this)\n  }\n\n  handleMouseMove(e) {\n    if (e.buttons) {\n      const { param } = this.props\n      const { range, properties } = this.state\n      let newValue = ((typeof param.value === 'number') ? param.value : param[0].value) - e.movementY * range / 1000\n      if (newValue > properties.maxValue) newValue = properties.maxValue\n      if (newValue < properties.minValue) newValue = properties.minValue\n      if (param.update) {\n        param.update({ knob: { value: newValue } })\n      } else if (param instanceof Array) {\n          param.forEach(p => p.value = newValue)\n      } else {\n        param.value = newValue\n      }\n      this.forceUpdate()\n    }\n  }\n\n  render({ param, small }, { range, properties }) {\n    param = (param instanceof Array) ? (param[0] || {}) : (param || {})\n    const transform = `rotate(${ (param.value - properties.minValue) * 300 / range - 150 }deg)`\n    const classes = `control ${small ? 'small' : ''}`\n    const size = small ? '0.4cm' : '0.8cm'\n    const lineHeight = small ? '0.35cm' : '0.7cm'\n    return (\n      <div class={classes}>\n        <div class='knob'>\n          <svg class='knob' style={{ transform }}>\n            <circle cx={size} cy={size} r={size} stroke='black' stroke-width='2' fill='white' />\n            <line x1={size} y1='0' x2={size} y2={lineHeight} stroke-width='2' stroke=\"black\"/>\n          </svg>\n          <input onMouseMove={this.handleMouseMove} class='knob' type='range'/>\n        </div>\n      </div>\n    )\n  }\n}","import { h, Component } from 'preact'\nimport './Cables.css'\n\nvar downNode = { node: {}, input: false, output: false, component: {} }\nvar addCable = () => {}\n\nconst link = (method) => {\n  addCable = method\n}\n\nconst connect = (node, input, output, down, component) => {\n  if (down) downNode = { node, input, output, component }\n  else if (downNode.node !== {} && (downNode.node.trig === node.trig)) {\n    // MABYE there should be no else there, a node could be input AND output ?\n    if (output && downNode.input) {\n      node.connect(downNode.node)\n      addCable(downNode.component, component)\n    }\n    if (input && downNode.output) {\n      if (node instanceof Array) {\n        node.forEach(n => downNode.node.connect(n))\n      } else {\n        downNode.node.connect(node)\n      }\n      addCable(downNode.component, component)\n    }\n  }\n}\n\nexport {\n  connect\n}\n\nclass CablesOverlay extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { cables: [] }\n    this.addCable = this.addCable.bind(this)\n    link(this.addCable)\n  }\n\n  addCable(component1, component2) {\n    this.setState(({ cables }) => ({\n      cables: cables.concat({ components: [component1, component2] })\n    }))\n    this.forceUpdate()\n  }\n\n  render(_, { cables }) {\n    return(\n      <svg class='overlay'>\n        {cables.map(({ components }) => {\n          const b1 = components[0].base\n          const x1 = b1.offsetLeft + b1.offsetWidth / 2 - 1\n          const y1 = b1.offsetTop + b1.offsetHeight / 2 - 1\n          const b2 = components[1].base\n          const x2 = b2.offsetLeft + b2.offsetWidth / 2 - 1\n          const y2 = b2.offsetTop + b2.offsetHeight / 2 - 1\n          return (<line class='cable' x1={x1} y1={y1} x2={x2} y2={y2} stroke-linecap='round' />)\n        })}\n      </svg> \n    )\n  }\n}\n\nexport default CablesOverlay","import { h, Component } from 'preact'\nimport { connect } from './Cables'\nimport './Socket.css'\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.onConnect = this.onConnect.bind(this)\n  }\n\n  onConnect(down) {\n    connect(this.props.node, this.props.input, this.props.output, down, this)\n  }\n\n  render({ output }) {\n    const strokeWidth = output ? 3 : 2\n    return(\n      <div\n        class='socket'\n        onMouseDown={() => this.onConnect(true)}\n        onMouseUp={() => this.onConnect(false)}\n        onTouchStart={() => this.onConnect(true)}\n        onTouchEnd={() => this.onConnect(false)}\n      >\n        <svg class={`socket ${output ? 'output' : ''}`}>\n          <circle cx=\"3.5mm\" cy=\"3.5mm\" r=\"3.5mm\" stroke=\"black\" stroke-width={strokeWidth} fill=\"#efefef\" />\n        </svg>\n      </div>\n    )\n  }\n}","import { h, Component } from 'preact'\nimport Module from './Module'\nimport Led from '../Led'\nimport Knob from '../Knob'\nimport Socket from '../Socket'\n\nclass ClockNode {\n  constructor() {\n    this.trig = true\n    this.frequency = {\n      value: 1\n    }\n    this.outs = []\n    this.beep = () => {}\n    this.clock = this.clock.bind(this)\n    this.update = this.update.bind(this)\n    this.start = this.start.bind(this)\n  }\n\n  connect(input) {\n    if (input.update) {\n      this.outs.push(input)\n    }\n  }\n\n  update() {\n    this.beep()\n    this.outs.forEach(o => o.update())\n  }\n\n  clock() {\n    window.setTimeout(() => this.clock(), 1 / this.frequency.value * 1000)\n    this.update()\n  }\n\n  start(beep) {\n    this.beep = beep\n    this.clock()\n  }\n}\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { clockNode: {}, beep: false }\n    this.beep = this.beep.bind(this)\n  }\n\n  componentDidMount() {\n    const clockNode = new ClockNode()\n\n    this.setState({ clockNode })\n\n    clockNode.start(this.beep)\n  }\n\n  beep() {\n    this.setState({ beep: true })\n    window.setTimeout(() => this.setState({ beep: false }), 1/30 * 1000)\n  }\n\n  render(_, { clockNode, beep }) {\n    return (\n      <Module>\n        <h2>clk</h2>\n        <Led blink={beep} color='black' />\n        <div class='subset'>\n          <h3>freq</h3>\n          <Knob type='lfo' param={clockNode.frequency} />\n        </div>\n        <div class='subset'>\n          <h4>out</h4>\n          <Socket output node={clockNode} />\n        </div>\n      </Module>\n    )\n  }\n}","import { h, Component } from 'preact'\nimport Module from './Module'\nimport Led from '../Led'\nimport Knob from '../Knob'\nimport Socket from '../Socket'\n\nclass Note {\n  constructor(index, sequencer) {\n    this.index = index\n    this.sequencer = sequencer\n    this.value = 440\n  }\n\n  update({ knob }) {\n    this.value = knob.value\n    this.sequencer.updateNote(this.index)\n  }\n}\n\nclass SequencerNode {\n  constructor(steps, clk) {\n    this.trig = true\n    this.clk = clk\n    this.outs = []\n    this.notes = new Array(steps)\n    this.notes.fill(0)\n    this.notes = this.notes.map((_, i) => (new Note(i, this)))\n    this.currentStep = 0\n    this.connect = this.connect.bind(this)\n    this.update = this.update.bind(this)\n    this.sendSignal = this.sendSignal.bind(this)\n    this.updateNote = this.updateNote.bind(this)\n  }\n\n  connect(input) {\n    if (input.update) {\n      input.update({ frequency: this.notes[this.currentStep] })\n      this.outs.push(input)\n    }\n  }\n\n  update() {\n    this.clk()\n    this.sendSignal()\n  }\n\n  sendSignal() {\n    this.outs.forEach(o => o.update({ frequency: this.notes[this.currentStep] }))\n  }\n\n  updateNote(index) {\n    if (index === this.currentStep) this.sendSignal()\n  }\n}\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sequencerNode: { notes: [] },\n      currentStep: 0\n    }\n    this.clk = this.clk.bind(this)\n  }\n\n  componentDidMount() {\n    const sequencerNode = new SequencerNode(this.props.steps, this.clk)\n\n    this.setState({ sequencerNode })\n  }\n\n  clk() {\n    const { steps } = this.props\n    const { currentStep, sequencerNode } = this.state\n    const newStep = (currentStep + 1) % steps\n    sequencerNode.currentStep = newStep\n    this.setState(() => ({\n      currentStep: newStep\n    }))\n  }\n\n  render({ steps }, { currentStep, sequencerNode }) {\n    const rows = new Array(Math.ceil(steps / 4))\n    rows.fill(0)\n    return (\n      <Module>\n        <h2>seq</h2>\n        <div class='subset'>\n          {rows.map((_, i) => (\n            <div class='h-subset'>\n              {sequencerNode.notes.slice(i * 4, i * 4 + 4).map((note, j) => (\n                <div class='subset'>\n                  <Led color='black' blink={ 4 * i + j == currentStep } />\n                  <Knob small type='frequency' param={note} />\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n        <div class='h-subset'>\n         <div class='subset'>\n            <h4>trig</h4>\n            <Socket input node={sequencerNode} />\n          </div>\n         <div class='subset'>\n            <h4>reset</h4>\n            <Socket input />\n          </div>\n          <div class='subset'>\n            <h4>out</h4>\n            <Socket output node={sequencerNode} />\n          </div>\n        </div>\n      </Module>\n    )\n  }\n}","import { h, Component } from 'preact'\nimport Module from './Module'\nimport Knob from '../Knob'\nimport Socket from '../Socket'\n\nclass EnvelopeNode {\n  constructor() {\n    this.trig = true\n    this.attack = { value: 0.05 }\n    this.hold = { value: 0 }\n    this.decay = { value: 0.4 }\n    this.outs = []\n    this.update = this.update.bind(this)\n  }\n\n  connect(input) {\n    if (input.update) {\n      this.outs.push(input)\n    }\n  }\n\n  update() {\n    this.outs.forEach(o => o.update({\n      attack: this.attack,\n      hold: this.hold,\n      decay: this.decay\n    }))\n  }\n}\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { envelopeNode: {} }\n  }\n  componentDidMount() {\n    const envelopeNode = new EnvelopeNode()\n\n    this.setState({ envelopeNode })\n  }\n\n  render(_, { envelopeNode }) {\n    return (\n      <Module>\n        <h2>env</h2>\n        <div class='subset'>\n          <div class='subset'>\n            <h3>attack</h3>\n            <Knob small type='gain' param={envelopeNode.attack} />\n          </div>\n          <div class='subset'>\n            <h3>hold</h3>\n            <Knob small type='gain' param={envelopeNode.hold} />\n          </div>\n\n          <div class='subset'>\n            <h3>decay</h3>\n            <Knob small type='gain' param={envelopeNode.decay} />\n          </div>\n        </div>\n        <div class='subset'>\n          <h4>trig</h4>\n          <Socket input node={envelopeNode} />\n        </div>\n        <div class='subset'>\n          <h4>out</h4>\n          <Socket output node={envelopeNode} />\n        </div>\n      </Module>\n    )\n  }\n}","import { h, Component } from 'preact'\nimport { audioContext } from '../App'\nimport Module from './Module'\nimport Knob from '../Knob'\nimport Socket from '../Socket'\n\nclass FrequencyControlNode {\n  constructor(nodes) {\n    this.trig = true\n    this.nodes = nodes\n    this.value = nodes[0].frequency.value\n    this.addedFrequency = 0\n    this.update = this.update.bind(this)\n  }\n\n  update({ frequency, knob }) {\n    if (knob) {\n      const difference = knob.value - this.value\n      this.value = knob.value\n      this.nodes.forEach(node => node.frequency.value += difference)\n    } else if (frequency) {\n      const difference = frequency.value - this.addedFrequency\n      this.addedFrequency = frequency.value\n      this.nodes.forEach(node => node.frequency.value += difference)\n    }\n  }\n}\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sineNode: {},\n      squareNode: {},\n      triangleNode: {},\n      sawNode: {}\n    }\n  }\n  componentDidMount() {\n    const sineNode = audioContext.createOscillator()\n    const squareNode = audioContext.createOscillator()\n    const triangleNode = audioContext.createOscillator()\n    const sawNode = audioContext.createOscillator()\n    const frequencyControlNode = new FrequencyControlNode([\n      sineNode, squareNode, triangleNode, sawNode\n    ])\n\n    sineNode.type = 'sine'\n    squareNode.type = 'square'\n    triangleNode.type = 'triangle'\n    sawNode.type = 'sawtooth'\n\n    this.setState({ sineNode, squareNode, triangleNode, sawNode, frequencyControlNode })\n\n    sineNode.start()\n    squareNode.start()\n    triangleNode.start()\n    sawNode.start()\n  }\n\n  render(_, { sineNode, squareNode, triangleNode, sawNode, frequencyControlNode }) {\n    const allFrequencies = [sineNode.frequency, squareNode.frequency, triangleNode.frequency, sawNode.frequency]\n    return (\n      <Module>\n        <h2>osc</h2>\n        <div class='subset'>\n          <h3>freq</h3>\n          <Knob type='frequency' param={frequencyControlNode} />\n        </div>\n        <div class='subset'>\n          <h4>v/oct</h4>\n          <Socket input node={frequencyControlNode} />\n        </div>\n        <div class='subset'>\n          <div class='subset'>\n            <h4>sine</h4>\n            <Socket output node={sineNode} />\n          </div>\n          <div class='subset'>\n            <h4>square</h4>\n            <Socket output node={squareNode} />\n          </div>\n          <div class='subset'>\n            <h4>triangle</h4>\n            <Socket output node={triangleNode} />\n          </div>\n          <div class='subset'>\n            <h4>saw</h4>\n            <Socket output node={sawNode} />\n          </div>\n        </div>\n      </Module>\n    )\n  }\n}","import { h, Component } from 'preact'\nimport { audioContext } from '../App'\nimport Module from './Module'\nimport Socket from '../Socket'\n\nclass VCANode {\n  constructor(gainNode) {\n    this.trig = true\n    this.gainNode = gainNode\n  }\n\n  update(params) {\n    this.gainNode.gain.setTargetAtTime(1, audioContext.currentTime, params.attack.value)\n    this.gainNode.gain.setTargetAtTime(0, audioContext.currentTime + params.attack.value + params.hold.value, params.decay.value)\n  }\n}\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { envelopeNode: {} }\n  }\n  componentDidMount() {\n    const gainNode = audioContext.createGain()\n    const vcaNode = new VCANode(gainNode)\n\n    gainNode.gain.value = 0\n\n    this.setState({ vcaNode , gainNode })\n  }\n\n  render(_, { vcaNode, gainNode }) {\n    return (\n      <Module>\n        <h2>vca</h2>\n        <div class='subset'>\n          <h4>in</h4>\n          <Socket input node={gainNode} />\n        </div>\n        <div class='subset'>\n          <h4>cv</h4>\n          <Socket input node={vcaNode} />\n        </div>\n        <div class='subset'>\n          <h4>out</h4>\n          <Socket output node={gainNode} />\n        </div>\n      </Module>\n    )\n  }\n}","import { h, Component } from 'preact'\nimport { audioContext } from '../App'\nimport Module from './Module'\nimport Knob from '../Knob'\nimport Socket from '../Socket'\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { lowpassNode: {}, highpassNode: {} }\n  }\n  componentDidMount() {\n    const lowpassNode = audioContext.createBiquadFilter()\n    const highpassNode = audioContext.createBiquadFilter()\n\n    lowpassNode.type = 'lowpass'\n    highpassNode.type = 'highpass'\n\n    this.setState({ lowpassNode, highpassNode })\n  }\n\n  render(_, { lowpassNode, highpassNode }) {\n    const allNodes = [lowpassNode, highpassNode]\n    const allFrequencies = allNodes.map(n => n.frequency)\n    const allResonances = allNodes.map(n => n.Q)\n    return (\n      <Module>\n        <h2>flt</h2>\n        <div class='subset'>\n          <h3>freq</h3>\n          <Knob type='filterFrequency' param={allFrequencies} />\n        </div>\n        <div class='subset'>\n          <h3>res</h3>\n          <Knob type='qFactor' param={allResonances} />\n        </div>\n        <div class='subset'>\n          <h4>in</h4>\n          <Socket input node={allNodes} />\n        </div>\n        <div class='subset'>\n          <h4>lp</h4>\n          <Socket output node={lowpassNode} />\n        </div>\n        <div class='subset'>\n          <h4>hp</h4>\n          <Socket output node={highpassNode} />\n        </div>\n      </Module>\n    )\n  }\n}","import { h, Component } from 'preact'\nimport { audioContext } from '../App'\nimport Module from './Module'\nimport Knob from '../Knob'\nimport Socket from '../Socket'\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { gainNode: {} }\n  }\n  componentDidMount() {\n    const gainNode = audioContext.createGain()\n    const finish = audioContext.destination\n\n    gainNode.connect(finish)\n\n    gainNode.gain.value = 0.1\n\n    this.setState({ gainNode })\n  }\n\n  render(_, { gainNode }) {\n    return (\n      <Module>\n        <h2>out</h2>\n        <div class='subset'>\n          <h3>gain</h3>\n          <Knob type='gain' param={gainNode.gain} />\n        </div>\n        <div class='subset'>\n          <h4>in</h4>\n          <Socket input node={gainNode} />\n        </div>\n      </Module>\n    )\n  }\n}","import { h, Component, createContext } from 'preact'\nimport Clock from './modules/Clock'\nimport Sequencer from './modules/Sequencer'\nimport Envelope from './modules/Envelope'\nimport Oscilator from './modules/Oscilator'\nimport VCA from './modules/VCA'\nimport Filter from './modules/Filter'\nimport Out from './modules/Out'\nimport './App.css'\nimport CablesOverlay from './Cables';\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext\nconst audioContext = new AudioContext()\n\nexport { audioContext }\n\nexport default class App extends Component {\n  componentWillUnmount() {\n    audioContext.close()\n  }\n\n  render() {\n    return (\n      <div class='rack'>\n        <Clock />\n        <Sequencer steps={16} />\n        <Envelope />\n        <Oscilator />\n        <VCA />\n        <Filter />\n        <Out />\n        <CablesOverlay />\n      </div>\n    )\n  }\n}","import { h, render } from 'preact';\nimport App from './App';\n\nconst mountNode = document.getElementById('app');\nrender(<App />, mountNode, mountNode.lastChild);"]}